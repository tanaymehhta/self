version: '3.8'

services:
  # PostgreSQL Database with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: self-postgres
    environment:
      POSTGRES_DB: self_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - self-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: self-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - self-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: self-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - self-network

  # NATS Message Queue
  nats:
    image: nats:alpine
    container_name: self-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--jetstream", "--http_port", "8222"]
    networks:
      - self-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: self-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - self-network

  # Backend API (Go) - Development setup without Docker for now
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.dev
  #   container_name: self-backend
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/self_dev
  #     - REDIS_URL=redis:6379
  #     - MINIO_ENDPOINT=minio:9000
  #     - MINIO_ACCESS_KEY=minioadmin
  #     - MINIO_SECRET_KEY=minioadmin123
  #     - NATS_URL=nats:4222
  #     - QDRANT_URL=http://qdrant:6333
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - postgres
  #     - redis
  #     - minio
  #     - nats
  #     - qdrant
  #   volumes:
  #     - ./backend:/app
  #   networks:
  #     - self-network

  # Frontend (Next.js) - Development setup without Docker for now
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: self-frontend
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:8080
  #     - NEXT_PUBLIC_WS_URL=ws://localhost:8080
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   networks:
  #     - self-network

  # AI Services (Python) - Will be added in Phase 1
  # ai-services:
  #   build:
  #     context: ./ai-services
  #     dockerfile: Dockerfile.dev
  #   container_name: self-ai
  #   environment:
  #     - NATS_URL=nats:4222
  #     - QDRANT_URL=http://qdrant:6333
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - nats
  #     - qdrant
  #   volumes:
  #     - ./ai-services:/app
  #     - ./models:/app/models
  #   networks:
  #     - self-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  qdrant_data:

networks:
  self-network:
    driver: bridge